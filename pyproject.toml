[tool.poetry]
name = "pfun"
version = "0.13.43"
description = "Functional, composable, asynchronous, type-safe Python."
authors = ["Sune Debel"]
readme = "README.md"
include = ["src/pfun/py.typed", "src/pfun/*.c", "src/pfun/*.so"]

[tool.poetry.build]
script = "build.py"
generate-setup-file = true

[tool.poetry.dependencies]
python = ">= 3.10, < 3.12"
aiohttp = { extras = ["speedups"], version = "^3.7.4", optional = true }
asyncpg = { version = "^0.30.0", optional = true }
hypothesis = { version = "^6.8.5", optional = true }
dill = "^0.4.0"
typing-extensions = [
    { version = "^3.10.0.0", python = ">= 3.7, < 3.11" },
    { version = "^4.8.0", python = "==3.11" },
]

[tool.poetry.dev-dependencies]
Cython = [
    { version = "3.0.0a10", python = ">= 3.7, < 3.11" },
    { version = "^3.0.5", python = "==3.11" },
]
pytest-mypy-plugins = "^1.9.3"
pytest-asyncio = "1.1.0"
pytest = "8.4.1"
hypothesis = "6.137.3"
ipython = "^7.7"
ipdb = "0.13.13"
flake8 = "7.3.0"
pytest-xdist = "2.5.0"
yapf = "0.43.0"
mypy = "0.950"
isort = "6.0.1"
pre-commit = "4.2.0"
pre-commit-hooks = "5.0.0"
main-dec = "0.1.1"
mkdocs = "1.6.1"
mkdocstrings = { version = "0.18.1", extras = [] }
mkdocs-material = "9.6.16"
taskipy = "1.14.1"

[tool.poetry.extras]
http = ["aiohttp"]
sql = ["asyncpg"]
test = ["hypothesis"]

[tool.taskipy.tasks]
compile = "poetry run cython --3str src/pfun/*.pyx"
install = "poetry run task compile && poetry install -E test -E sql -E http"
build = "poetry run task compile && poetry build"
test = "poetry run task install && poetry run pytest -rsx -n 4 --mypy-ini-file=tests/mypy.ini"
serve-docs = "poetry run task install && poetry run mkdocs serve"
lint = "poetry run pre-commit run --all"
pytkdocs = "pip install ./pytkdocs-0.14.0-py3-none-any.whl"

[build-system]
requires = ["poetry>=1.1.5", "setuptools>=41.2.0", "Cython"]
build-backend = "poetry.core.masonry.api"
